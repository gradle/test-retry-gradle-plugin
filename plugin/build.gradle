plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id "com.github.hierynomus.license" version "0.15.0"
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'checkstyle'
    id 'codenarc'
}

apply plugin: 'com.github.hierynomus.license'

repositories {
    jcenter()
}

group = 'org.gradle'
description = 'Mitigate flaky tests by retrying tests when they fail'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

configurations {
    plugin.description = 'The compile dependencies for the plugin, excluding the local dependencies to avoid problems with Shadow'
    implementation.extendsFrom plugin
}

dependencies {
    plugin 'org.ow2.asm:asm:7.2'

    testImplementation gradleTestKit()
    testImplementation "org.codehaus.groovy:groovy-all:2.5.8"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
    testImplementation "net.sourceforge.nekohtml:nekohtml:1.9.22"

    codenarc "org.codenarc:CodeNarc:1.0"
}

shadowJar {
    configurations = [project.configurations.plugin]
    dependencies {
        include(dependency('org.ow2.asm:asm'))
    }
    relocate 'org.objectweb.asm', 'org.gradle.testretry.org.objectweb.asm'
}

jar.enabled = false
jar.dependsOn shadowJar

gradlePlugin {
    plugins {
        register("testRetry") {
            id = "org.gradle.test-retry"
            displayName = "Gradle test retry plugin"
            description = project.description
            implementationClass = "org.gradle.plugins.testretry.TestRetryPlugin"
        }
    }
}

pluginBundle {
    website = 'https://github.com/gradle/test-retry-gradle-plugin'
    vcsUrl = 'https://github.com/gradle/test-retry-gradle-plugin.git'
    description = project.description
    tags = ['test', 'flaky']

    mavenCoordinates {
        groupId = 'org.gradle'
        artifactId = 'test-retry-gradle-plugin'
    }
}

license {
    header = rootProject.file('gradle/licenseHeader.txt')
    exclude '**/*.tokens'
    mapping {
        // style used by gradle/gradle
        java = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        kt = 'SLASHSTAR_STYLE'
    }
    sourceSets = project.sourceSets
    strictCheck = true
}

publishing {
    repositories {
        maven {
            name = "GradleBuildInternalSnapshots"
            url = "https://repo.gradle.org/gradle/libs-snapshots-local"
            credentials {
                username = project.findProperty("artifactoryUsername")
                password = project.findProperty("artifactoryPassword")
            }
        }
    }
}

tasks.withType(Test) {
    systemProperty 'org.gradle.test.currentGradleVersion', gradle.gradleVersion
}

task testAll(type: Test) {
    systemProperty 'org.gradle.test.allGradleVersions', true
}
